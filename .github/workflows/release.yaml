name: Release

on:
  workflow_dispatch:
    inputs:
      run_id:
        description: run id to pull artifacts from
        required: true
        default: ~
      github_ref:
        description: github tag of the release
        required: true
        default: ~

jobs:

  release:
    runs-on: ubuntu-latest
    steps:

      - name: Poll GitHub actions artifacts
        uses: nick-invision/retry@v2
        with:
          retry_wait_seconds: 30
          timeout_minutes: 30
          max_attempts: 60
          command: |
            expected_total_count=3;
            total_count=$(
              curl -sSL -H 'Accept: application/vnd.github.v3+json' -H 'Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
                'https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.event.inputs.run_id }}/artifacts' \
                | jq .total_count);
            test "$expected_total_count" -eq "$total_count"

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.github_ref }}
          release_name: Release ${{ github.event.inputs.github_ref }}
          draft: false
          prerelease: false

      - name: Download Ubuntu artifacts
        uses: dawidd6/action-download-artifact@v2
        with:
          name: linux-artifacts
          workflow: CI
          run_id: ${{ github.event.inputs.run_id }}

      - run: |
          echo "LINUX_RELEASE_ARCHIVE=$(cat release-archive.filename)" >>$GITHUB_ENV

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.LINUX_RELEASE_ARCHIVE }}
          asset_name: ${{ env.LINUX_RELEASE_ARCHIVE }}
          asset_content_type: application/gzip

      - name: Download macOS artifacts
        uses: dawidd6/action-download-artifact@v2
        with:
          name: macos-artifacts
          workflow: CI
          run_id: ${{ github.event.inputs.run_id }}

      - run: |
          echo "MAC_RELEASE_ARCHIVE=$(cat release-archive.filename)" >>$GITHUB_ENV

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.MAC_RELEASE_ARCHIVE }}
          asset_name: ${{ env.MAC_RELEASE_ARCHIVE }}
          asset_content_type: application/gzip

      - name: Download Windows artifacts
        uses: dawidd6/action-download-artifact@v2
        with:
          name: windows-artifacts
          workflow: CI
          run_id: ${{ github.event.inputs.run_id }}

      - run: |
          echo "WINDOWS_RELEASE_ARCHIVE=$(cat release-archive.filename)" >>$GITHUB_ENV

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.WINDOWS_RELEASE_ARCHIVE }}
          asset_name: ${{ env.WINDOWS_RELEASE_ARCHIVE }}
          asset_content_type: application/zip
          
      - name: Hook into package registry
        uses: swift-nav/swift-cli-publisher@v2
        if: ${{ github.event.ref }} =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+$
        env:
          DL_LINUX: ${{ env.LINUX_RELEASE_ARCHIVE }}
          DL_MAC: ${{ env.MAC_RELEASE_ARCHIVE }}
          DL_WIN: ${{ env.WINDOWS_RELEASE_ARCHIVE }}
          TOOLS: "sbp2rtcm,rtcm3tosbp,ubx2sbp,ubx2json,ixcom2sbp,nov2sbp,rtcm32json,json2rtcm3,mrtjs2rtjs"
        with:
          token: ${{ secrets.GH_TOKEN }}
          gh-name: ${{ secrets.GH_NAME }}
          gh-email: ${{ secrets.GH_EMAIL }}
